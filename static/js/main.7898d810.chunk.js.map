{"version":3,"sources":["../../src/components/AddPoem.js","../../src/components/PlayPoem.js","../../src/index.js","App.js","index.js"],"names":["AddPoem","props","useState","onSetNextDisabled","value","setNextDisabled","className","styles","reactopenpoetryaddpoem","reactopenpoetryslogan","reactopenpoetrymargin2","type","onChange","e","setPoemText","onClick","disabled","nextDisabled","PlayPoem","useEffect","poemCharArray","showHintSet","onSetPoemText","setShowHint","onSetShowHint","reactopenpoetryplaypoem","style","showHint","reactopenpoetryplaypoemverse","reactopenpoetryplaypoemhintrover","poemText","id","char","userPoemText","setUserPoemText","reactopenpoetrywrapper","reactopenpoetryh1","openSection","onChangePoem","onSetSection","setOpenSection","heading1","helper","nextButton","poemTextPass","heading2","hintButton","hintText","showHintOnStart","App","name","slogan","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7898d810.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from \"../styles.module.css\";\r\n\r\nconst AddPoem = (props) => {\r\n    const [poemText, setPoemText] = useState(\"\");\r\n    const [nextDisabled, setNextDisabled] = useState(true);\r\n\r\n    const onSetPoemText = (e) => {\r\n        setPoemText(e.target.value);\r\n        props.onChangePoem(e.target.value);\r\n\r\n        if (e.target.value != \"\") {\r\n            onSetNextDisabled(false);\r\n        } else {\r\n            onSetNextDisabled(true);\r\n        }\r\n    }\r\n\r\n    const onSetNextDisabled = (value) => {\r\n        setNextDisabled(value);\r\n    }\r\n\r\n    const onChangeSection = () => {\r\n        props.onSetSection(1);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.reactopenpoetryaddpoem}>\r\n            <h3>1. {(props.heading) ? props.heading1 : \"Add the poem you are about to learn/practice.\"}</h3>\r\n            <p className={styles.reactopenpoetryslogan}>{(props.helper) ? props.helper : \"Try to split the poem for each verse.\"}</p>\r\n\r\n            <div className={styles.reactopenpoetryaddpoeminputwrapper + \" \" + styles.reactopenpoetrymargin2}>\r\n                <textarea type=\"text\" className={styles.reactopenpoetryaddpoeminput} value={poemText} onChange={onSetPoemText}></textarea>\r\n            </div>\r\n\r\n            <button className={styles.reactopenpoetrybtn} onClick={onChangeSection} disabled={nextDisabled}>{(props.nextButton) ? props.nextButton : \"Next\"}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPoem;","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"../styles.module.css\";\r\n\r\nconst PlayPoem = (props) => {\r\n    const [userPoemText, setUserPoemText] = useState(\"\");\r\n    const [poemText, setPoemText] = useState([]);\r\n    const [showHint, setShowHint] = useState(true);\r\n\r\n    const onSetUserPoemText = (e) => {\r\n        setUserPoemText(e.target.value);\r\n    }\r\n\r\n    const onSetPoemText = (array) => {\r\n        setPoemText(array);\r\n    }\r\n\r\n    const onShowHint = () => {\r\n        setShowHint(!showHint);\r\n    }\r\n\r\n    const onSetShowHint = (value) => {\r\n        setShowHint(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let poemCharArray = props.poemTextPass.split('');\r\n        let showHintSet = props.showHint;\r\n\r\n        onSetPoemText(poemCharArray);\r\n        onSetShowHint(showHintSet);\r\n    }, [props.poemTextPass, props.showHint])  \r\n\r\n    return (\r\n        <div className={styles.reactopenpoetryplaypoem}>\r\n            <h3>2. {(props.heading2) ? props.heading2 : \"Practice to write it down.\"}</h3>\r\n\r\n            <div className={styles.reactopenpoetryplaypoemhint + \" \" + styles.reactopenpoetrymargin2} style={{ \"display\": (showHint) ? \"block\": \"none\" }}>\r\n                <p className={styles.reactopenpoetryplaypoemverse}>{(props.hintText) ? props.hintText : \"Poem hint\"}</p>\r\n\r\n                <div className={styles.reactopenpoetryplaypoemhintrover}>\r\n                    {(poemText) ? \r\n                        ( poemText.map((char, index) => {\r\n                            return <span id={index} className={(char.toLowerCase() == ((userPoemText[index]) ? userPoemText[index].toLowerCase() : userPoemText[index])) ? styles.reactopenpoetrygreencorrect : \"react-openpoetry-green-none\"}>{char}</span>;\r\n                        })\r\n                        ) : (\r\n                            <p></p>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <button className={styles.reactopenpoetrybtn} onClick={onShowHint}>{(props.hintButton) ? props.hintButton : \"Show/hide hint\"}</button>\r\n\r\n            <div className={styles.reactopenpoetryaddpoeminputwrapper + \" \" + styles.reactopenpoetrymargin2}>\r\n                <textarea type=\"text\" className={styles.reactopenpoetryaddpoeminput} value={userPoemText} onChange={onSetUserPoemText}></textarea>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PlayPoem;","import React, { useState } from \"react\";\nimport AddPoem from \"./components/AddPoem\";\nimport PlayPoem from \"./components/PlayPoem\";\nimport styles from \"./styles.module.css\";\n\nconst OpenPoetry = (props) => {\n    const [poemText, setPoemText] = useState(\"\");\n    const [openSection, setOpenSection] = useState(0);\n\n    const onSetPoemText = (value) => {\n        setPoemText(value);\n    }\n\n    const onSetOpenSection = (value) => {\n        setOpenSection(value);\n    }\n\n    return (\n        <div className={styles.reactopenpoetrywrapper}>\n            <h1 className={styles.reactopenpoetryh1}>{(props.name) ? props.name : \"OpenPoetry\"}</h1>\n            <p className={styles.reactopenpoetryslogan}>{(props.slogan) ? props.slogan : \"Write down the poem to memorize easier.\"}</p>\n\n            {(openSection == 0) ? (\n                <AddPoem onChangePoem={onSetPoemText} onSetSection={onSetOpenSection} heading1={props.heading1} helper={props.helper} nextButton={props.nextButton} />\n            ) : (\n                <PlayPoem poemTextPass={poemText} heading2={props.heading2} hintButton={props.hintButton} hintText={props.hintText} showHint={props.showHintOnStart} />\n            )\n            }\n        </div>\n    )\n}\n\nexport default OpenPoetry;","import React from 'react'\n\nimport OpenPoetry from 'react-openpoetry'\nimport 'react-openpoetry/dist/index.css'\n\nconst App = () => {\n  return (\n    <OpenPoetry \n        name=\"OpenPoetry\" \n        slogan=\"Write down the poem to memorize easier.\" \n        heading1=\"Add the poem you are about to learn/practice.\" \n        helper=\"Try to split the poem for each verse.\"\n        nextButton=\"Next\"\n        heading2=\"Practice to write it down.\"\n        hintText=\"Poem hint\"\n        hintButton=\"Show/hide hint\"\n        showHintOnStart={true}\n      />\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}