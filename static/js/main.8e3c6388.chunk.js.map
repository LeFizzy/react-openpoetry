{"version":3,"sources":["../../src/components/AddPoem.js","../../src/components/PlayPoem.js","../../src/index.js","App.js","index.js"],"names":["AddPoem","props","useState","poemText","setPoemText","nextDisabled","setNextDisabled","onSetNextDisabled","value","className","styles","reactopenpoetryaddpoem","reactopenpoetryslogan","reactopenpoetrymargin2","type","onChange","e","onClick","disabled","PlayPoem","userPoemText","setUserPoemText","showHint","setShowHint","useEffect","poemCharArray","showHintSet","onSetPoemText","onSetShowHint","reactopenpoetryplaypoem","style","reactopenpoetryplaypoemverse","reactopenpoetryplaypoemhintrover","id","char","openSection","setOpenSection","reactopenpoetrywrapper","reactopenpoetryh1","onChangePoem","onSetSection","heading1","helper","nextButton","poemTextPass","heading2","hintButton","hintText","showHintOnStart","App","name","slogan","ReactDOM","render","document","getElementById"],"mappings":"gmBAGMA,EAAU,SAACC,GAAU,MACSC,mBADT,IAChBC,EADgB,KACNC,EADM,OAEiBF,oBAFjB,GAEhBG,EAFgB,KAEFC,EAFE,KAejBC,EAAoB,SAACC,GACvBF,MAOJ,OACI,yBAAKG,UAAWC,EAAOC,wBACnB,kCAASV,EAAD,QAAkBA,EAAlB,SADZ,iDAEI,uBAAGQ,UAAWC,EAAOE,uBAAyBX,EAAD,OAAiBA,EAAjB,OAFjD,yCAII,yBAAKQ,UAAWC,yCAAkDA,EAAOG,wBACrE,8BAAUC,KAAV,OAAsBL,UAAWC,EAAjC,4BAAqEF,MAArE,EAAsFO,SAzB5E,SAACC,GACnBZ,EAAYY,SAAZZ,OACAH,eAAmBe,SAAnBf,OAEA,IAAIe,eACAT,MAEAA,UAqBA,4BAAQE,UAAWC,EAAnB,mBAA8CO,QAb9B,WACpBhB,mBAY4EiB,SAAUb,GAAgBJ,EAAD,WAAqBA,EAArB,WATzG,UCvBEkB,EAAW,SAAClB,GAAU,MACgBC,mBADhB,IACjBkB,EADiB,KACHC,EADG,OAEQnB,mBAFR,IAEjBC,EAFiB,KAEPC,EAFO,OAGQF,oBAHR,GAGjBoB,EAHiB,KAGPC,EAHO,KA6BxB,OARAC,qBAAU,WACN,IAAIC,EAAgBxB,qBAApB,IACIyB,EAAczB,EAAlB,SAbAG,EAeAuB,GAPAJ,EAQAK,KACD,CAAC3B,EAAD,aAAqBA,EANxBuB,WASI,yBAAKf,UAAWC,EAAOmB,yBACnB,kCAAS5B,EAAD,SAAmBA,EAAnB,SADZ,8BAGI,yBAAKQ,UAAWC,kCAA2CA,EAA3D,uBAA0FoB,MAAO,CAAE,QAAYR,EAAD,QAAsB,SAChI,uBAAGb,UAAWC,EAAOqB,8BAAgC9B,EAAD,SAAmBA,EAAnB,SADxD,aAGI,yBAAKQ,UAAWC,EAAOsB,kCACjB7B,EACIA,EAAA,KAAa,cACX,OAAO,0BAAM8B,GAAN,EAAiBxB,UAAYyB,kBAAwBd,EAAD,GAAwBA,KAAxB,cAA4DA,EAApF,IAA4GV,EAA5G,4BAAiJ,+BAApL,MAGA,sBAZpB,QAkBI,4BAAQD,UAAWC,EAAnB,mBAA8CO,QAnCnC,WACfM,QAkCyEtB,EAAD,WAAqBA,EAArB,WAlBxE,kBAoBI,yBAAKQ,UAAWC,yCAAkDA,EAAOG,wBACrE,8BAAUC,KAAV,OAAsBL,UAAWC,EAAjC,4BAAqEF,MAArE,EAA0FO,SA9C5E,SAACC,GACvBK,EAAgBL,SAAhBK,a,ECJW,SAACpB,GAAU,MACMC,mBADN,IACnBC,EADmB,KACTC,EADS,OAEYF,mBAFZ,GAEnBiC,EAFmB,KAENC,EAFM,KAY1B,OACI,yBAAK3B,UAAWC,EAAO2B,wBACnB,wBAAI5B,UAAWC,EAAO4B,mBAAqBrC,EAAD,KAAeA,EAAf,KAD9C,cAEI,uBAAGQ,UAAWC,EAAOE,uBAAyBX,EAAD,OAAiBA,EAAjB,OAFjD,2CAIK,GAACkC,EACE,qBAASI,aAdC,SAAC/B,GACnBJ,MAa8CoC,aAVzB,SAAChC,GACtB4B,MAS8EK,SAAUxC,EAAhF,SAAgGyC,OAAQzC,EAAxG,OAAsH0C,WAAY1C,EAAM0C,aAExI,qBAAUC,aAAV,EAAkCC,SAAU5C,EAA5C,SAA4D6C,WAAY7C,EAAxE,WAA0F8C,SAAU9C,EAApG,SAAoHqB,SAAUrB,EAAM+C,oBCJrIC,G,MAhBH,WACV,OACE,kBAAC,EAAD,CACIC,KAAK,aACLC,OAAO,0CACPV,SAAS,gDACTC,OAAO,wCACPC,WAAW,OACXE,SAAS,6BACTE,SAAS,YACTD,WAAW,iBACXE,iBAAiB,MCVzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8e3c6388.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from \"../styles.module.css\";\r\n\r\nconst AddPoem = (props) => {\r\n    const [poemText, setPoemText] = useState(\"\");\r\n    const [nextDisabled, setNextDisabled] = useState(true);\r\n\r\n    const onSetPoemText = (e) => {\r\n        setPoemText(e.target.value);\r\n        props.onChangePoem(e.target.value);\r\n\r\n        if (e.target.value != \"\") {\r\n            onSetNextDisabled(false);\r\n        } else {\r\n            onSetNextDisabled(true);\r\n        }\r\n    }\r\n\r\n    const onSetNextDisabled = (value) => {\r\n        setNextDisabled(value);\r\n    }\r\n\r\n    const onChangeSection = () => {\r\n        props.onSetSection(1);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.reactopenpoetryaddpoem}>\r\n            <h3>1. {(props.heading) ? props.heading1 : \"Add the poem you are about to learn/practice.\"}</h3>\r\n            <p className={styles.reactopenpoetryslogan}>{(props.helper) ? props.helper : \"Try to split the poem for each verse.\"}</p>\r\n\r\n            <div className={styles.reactopenpoetryaddpoeminputwrapper + \" \" + styles.reactopenpoetrymargin2}>\r\n                <textarea type=\"text\" className={styles.reactopenpoetryaddpoeminput} value={poemText} onChange={onSetPoemText}></textarea>\r\n            </div>\r\n\r\n            <button className={styles.reactopenpoetrybtn} onClick={onChangeSection} disabled={nextDisabled}>{(props.nextButton) ? props.nextButton : \"Next\"}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPoem;","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"../styles.module.css\";\r\n\r\nconst PlayPoem = (props) => {\r\n    const [userPoemText, setUserPoemText] = useState(\"\");\r\n    const [poemText, setPoemText] = useState([]);\r\n    const [showHint, setShowHint] = useState(true);\r\n\r\n    const onSetUserPoemText = (e) => {\r\n        setUserPoemText(e.target.value);\r\n    }\r\n\r\n    const onSetPoemText = (array) => {\r\n        setPoemText(array);\r\n    }\r\n\r\n    const onShowHint = () => {\r\n        setShowHint(!showHint);\r\n    }\r\n\r\n    const onSetShowHint = (value) => {\r\n        setShowHint(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let poemCharArray = props.poemTextPass.split('');\r\n        let showHintSet = props.showHint;\r\n\r\n        onSetPoemText(poemCharArray);\r\n        onSetShowHint(showHintSet);\r\n    }, [props.poemTextPass, props.showHint])  \r\n\r\n    return (\r\n        <div className={styles.reactopenpoetryplaypoem}>\r\n            <h3>2. {(props.heading2) ? props.heading2 : \"Practice to write it down.\"}</h3>\r\n\r\n            <div className={styles.reactopenpoetryplaypoemhint + \" \" + styles.reactopenpoetrymargin2} style={{ \"display\": (showHint) ? \"block\": \"none\" }}>\r\n                <p className={styles.reactopenpoetryplaypoemverse}>{(props.hintText) ? props.hintText : \"Poem hint\"}</p>\r\n\r\n                <div className={styles.reactopenpoetryplaypoemhintrover}>\r\n                    {(poemText) ? \r\n                        ( poemText.map((char, index) => {\r\n                            return <span id={index} className={(char.toLowerCase() == ((userPoemText[index]) ? userPoemText[index].toLowerCase() : userPoemText[index])) ? styles.reactopenpoetrygreencorrect : \"react-openpoetry-green-none\"}>{char}</span>;\r\n                        })\r\n                        ) : (\r\n                            <p></p>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <button className={styles.reactopenpoetrybtn} onClick={onShowHint}>{(props.hintButton) ? props.hintButton : \"Show/hide hint\"}</button>\r\n\r\n            <div className={styles.reactopenpoetryaddpoeminputwrapper + \" \" + styles.reactopenpoetrymargin2}>\r\n                <textarea type=\"text\" className={styles.reactopenpoetryaddpoeminput} value={userPoemText} onChange={onSetUserPoemText}></textarea>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PlayPoem;","import React, { useState } from \"react\";\nimport AddPoem from \"./components/AddPoem\";\nimport PlayPoem from \"./components/PlayPoem\";\nimport styles from \"./styles.module.css\";\n\nconst OpenPoetry = (props) => {\n    const [poemText, setPoemText] = useState(\"\");\n    const [openSection, setOpenSection] = useState(0);\n\n    const onSetPoemText = (value) => {\n        setPoemText(value);\n    }\n\n    const onSetOpenSection = (value) => {\n        setOpenSection(value);\n    }\n\n    return (\n        <div className={styles.reactopenpoetrywrapper}>\n            <h1 className={styles.reactopenpoetryh1}>{(props.name) ? props.name : \"OpenPoetry\"}</h1>\n            <p className={styles.reactopenpoetryslogan}>{(props.slogan) ? props.slogan : \"Write down the poem to memorize easier.\"}</p>\n\n            {(openSection == 0) ? (\n                <AddPoem onChangePoem={onSetPoemText} onSetSection={onSetOpenSection} heading1={props.heading1} helper={props.helper} nextButton={props.nextButton} />\n            ) : (\n                <PlayPoem poemTextPass={poemText} heading2={props.heading2} hintButton={props.hintButton} hintText={props.hintText} showHint={props.showHintOnStart} />\n            )\n            }\n        </div>\n    )\n}\n\nexport default OpenPoetry;","import React from 'react'\n\nimport OpenPoetry from 'react-openpoetry'\nimport 'react-openpoetry/dist/index.css'\n\nconst App = () => {\n  return (\n    <OpenPoetry \n        name=\"OpenPoetry\" \n        slogan=\"Write down the poem to memorize easier.\" \n        heading1=\"Add the poem you are about to learn/practice.\" \n        helper=\"Try to split the poem for each verse.\"\n        nextButton=\"Next\"\n        heading2=\"Practice to write it down.\"\n        hintText=\"Poem hint\"\n        hintButton=\"Show/hide hint\"\n        showHintOnStart={true}\n      />\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}